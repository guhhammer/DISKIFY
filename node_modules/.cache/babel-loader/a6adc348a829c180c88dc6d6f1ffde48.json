{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\proj\\\\meme\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css';\nimport NavBar from './NavBar'; // Get artist address from metamask.\n\nvar _require = require('ipfs-http-client'),\n    create = _require.create;\n\nvar ipfs = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n});\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _super.call(this, props);\n\n    _this2.captureAlbumCover = function (event) {\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      var _this = _assertThisInitialized(_this2);\n\n      reader.onloadend = function () {\n        var _cover = Buffer(reader.result);\n\n        ipfs.add(_cover).then(function (out) {\n          console.log(\"Album cover hash: \", out['path']);\n          _this.state.album_cover = 'https://ipfs.infura.io/ifps/' + out['path'];\n        });\n      };\n\n      console.log(\"Album cover captured.\");\n    };\n\n    _this2.captureFiles = function (event) {\n      event.preventDefault();\n\n      function waitingThePush(_x) {\n        return _waitingThePush.apply(this, arguments);\n      }\n\n      function _waitingThePush() {\n        _waitingThePush = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  ipfs.add(bdata).then(function (out) {\n                    console.log(\"Track (\", file.name, \") hash: \", out['path']);\n\n                    _this.state.track_hashes.push('https://ipfs.infura.io/ipfs/' + out['path']);\n                  });\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _waitingThePush.apply(this, arguments);\n      }\n\n      var _this = _assertThisInitialized(_this2);\n\n      var _loop = function _loop() {\n        var file = event.target.files[i];\n\n        _this.state.track_names.push(file.name);\n\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = function () {\n          console.log(\"Track (\", file.name, \") captured.\");\n          var bdata = Buffer(reader.result);\n          var result = waitingThePush(bdata).catch(function (_) {\n            return \"didn't return hash.\";\n          });\n          console.log('result: ', result);\n        };\n      };\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _loop();\n      }\n\n      console.log(\"Tracks captured.\");\n    };\n\n    _this2.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting the form...\");\n      _this2.state.album_name = document.getElementById(\"input-albumname\").value;\n      _this2.state.artist_name = document.getElementById(\"input-artistname\").value;\n      _this2.state.genres = document.getElementById(\"input-albumname\").value;\n      var currentDate = new Date();\n      _this2.state.release_date = currentDate.getFullYear().toString() + \"-\" + (currentDate.getMonth() + 1).toString() + \"-\" + currentDate.getDate();\n      _this2.state.artist_address = \"0x GET ADDRESS OF SENDER!!\";\n\n      var _this = _assertThisInitialized(_this2);\n\n      var _hash = \"\";\n      ipfs.add(JSON.stringify(_this2.state)).then(function (out) {\n        console.log(\"Minted Album Hash: \", out['path']);\n        _this.state.album_hash = out['path'];\n        console.log('https://ipfs.infura.io/ipfs/' + out['path']);\n      });\n      console.log(\"Mint done.\");\n    };\n\n    _this2.state = {\n      artist_address: null,\n      artist_name: null,\n      release_date: null,\n      album_name: null,\n      genres: null,\n      track_names: [],\n      album_cover: null,\n      track_hashes: [],\n      album_hash: null\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, \" \\xA0 \"), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, \" Mint Your Album \"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-albumname\",\n        placeholder: \" Album's Name \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-artistname\",\n        placeholder: \" Artist Name(s) \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-albumgenres\",\n        placeholder: \" Album Genres \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"input-albumcover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }\n      }, \" Select Image for Album Cover: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 88\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"input-albumcover\",\n        onChange: this.captureAlbumCover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"input-tracks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }, \" Select Image for Album Cover: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 84\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"input-tracks\",\n        onChange: this.captureFiles,\n        webkitdirectory: true,\n        mozdirectory: true,\n        msdirectory: true,\n        odirectory: true,\n        directory: true,\n        multiple: \"multiple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Mint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Gustavo/Desktop/proj/meme/src/components/App.js"],"names":["React","Component","logo","NavBar","require","create","ipfs","host","port","protocol","App","props","captureAlbumCover","event","file","target","files","reader","window","FileReader","readAsArrayBuffer","_this","onloadend","_cover","Buffer","result","add","then","out","console","log","state","album_cover","captureFiles","preventDefault","waitingThePush","data","bdata","name","track_hashes","push","i","track_names","catch","_","length","onSubmit","album_name","document","getElementById","value","artist_name","genres","currentDate","Date","release_date","getFullYear","toString","getMonth","getDate","artist_address","_hash","JSON","stringify","album_hash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from '../logo.png';\r\nimport './App.css';\r\n\r\nimport NavBar from './NavBar';\r\n\r\n\r\n// Get artist address from metamask.\r\n\r\n\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n   \r\n    this.state = {\r\n\r\n      artist_address: null,\r\n      \r\n      artist_name: null,\r\n\r\n      release_date: null,\r\n      \r\n      album_name: null, \r\n\r\n      genres: null,\r\n          \r\n      track_names: [],\r\n\r\n      album_cover: null, \r\n\r\n      track_hashes: [], \r\n      \r\n      album_hash: null\r\n\r\n    };\r\n\r\n  }\r\n\r\n\r\n  captureAlbumCover = (event) => {\r\n\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    const _this = this;\r\n    reader.onloadend = () => {\r\n\r\n      const _cover = Buffer(reader.result);\r\n\r\n      ipfs.add(_cover).then(function(out){\r\n\r\n        console.log(\"Album cover hash: \", out['path']);\r\n\r\n        _this.state.album_cover = 'https://ipfs.infura.io/ifps/' + out['path'];\r\n\r\n      });\r\n\r\n    }\r\n\r\n    console.log(\"Album cover captured.\")\r\n\r\n  }\r\n\r\n\r\n  captureFiles = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n\r\n    async function waitingThePush(data){\r\n\r\n      ipfs.add(bdata).then( function(out) {\r\n\r\n        console.log(\"Track (\",file.name,\") hash: \", out['path']);\r\n\r\n        _this.state.track_hashes.push( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n      });    \r\n\r\n    }\r\n\r\n\r\n    const _this = this;\r\n    for(var i = 0; i < event.target.files.length; i++){\r\n      \r\n      const file = event.target.files[i];\r\n      \r\n      _this.state.track_names.push(file.name);\r\n      \r\n      const reader = new window.FileReader();\r\n      \r\n      reader.readAsArrayBuffer(file);\r\n\r\n      reader.onloadend = () => {\r\n\r\n        console.log(\"Track (\", file.name,\") captured.\");\r\n \r\n        const bdata = Buffer(reader.result);\r\n\r\n        const result =  waitingThePush(bdata).catch(_ => \"didn't return hash.\");\r\n\r\n        console.log('result: ', result);\r\n        \r\n      }\r\n  \r\n    }\r\n    \r\n    console.log(\"Tracks captured.\");\r\n\r\n  }\r\n\r\n\r\n  onSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    console.log(\"Submitting the form...\");\r\n\r\n\r\n    this.state.album_name = document.getElementById(\"input-albumname\").value;\r\n\r\n    this.state.artist_name = document.getElementById(\"input-artistname\").value;\r\n\r\n    this.state.genres = document.getElementById(\"input-albumname\").value;\r\n\r\n\r\n    const currentDate = new Date();\r\n\r\n    this.state.release_date = \r\n      currentDate.getFullYear().toString()+\"-\"+\r\n      (currentDate.getMonth()+1).toString()+\"-\"+\r\n      currentDate.getDate();\r\n\r\n    this.state.artist_address = \"0x GET ADDRESS OF SENDER!!\";\r\n\r\n\r\n    const _this = this;\r\n    var _hash = \"\";\r\n\r\n    ipfs.add( JSON.stringify(this.state) ).then( function(out) { \r\n\r\n      console.log(\"Minted Album Hash: \", out['path']);\r\n\r\n      _this.state.album_hash = out['path'];\r\n\r\n      console.log( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n    });\r\n\r\n    console.log(\"Mint done.\");\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <NavBar></NavBar>\r\n\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                </a>\r\n                <p> &nbsp; </p>\r\n\r\n                <h1> Mint Your Album </h1>\r\n                \r\n                <form onSubmit={this.onSubmit}> \r\n                  \r\n                  <input type='text' id='input-albumname' placeholder=\" Album's Name \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-artistname' placeholder=\" Artist Name(s) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-albumgenres' placeholder=\" Album Genres \" />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-albumcover'> Select Image for Album Cover: </label><br/>\r\n                  <input type='file' id='input-albumcover' onChange={this.captureAlbumCover} />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-tracks'> Select Image for Album Cover: </label><br/>\r\n                  <input type='file' id='input-tracks' onChange={this.captureFiles} webkitdirectory mozdirectory msdirectory odirectory directory multiple=\"multiple\" />\r\n                  <br/>\r\n\r\n                  <input type='submit' value=\"Mint\" />\r\n                \r\n                </form>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}