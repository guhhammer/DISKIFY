{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar notARegExp = require('../internals/not-a-regexp');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toString = require('../internals/to-string');\n\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic'); // `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n\n\n$({\n  target: 'String',\n  proto: true,\n  forced: !correctIsRegExpLogic('includes')\n}, {\n  includes: function includes(searchString\n  /* , position = 0 */\n  ) {\n    return !!~toString(requireObjectCoercible(this)).indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});","map":{"version":3,"sources":["C:/Users/Gustavo/Desktop/proj/meme/node_modules/core-js-pure/modules/es.string.includes.js"],"names":["$","require","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","target","proto","forced","includes","searchString","indexOf","arguments","length","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,oBAAoB,GAAGJ,OAAO,CAAC,sCAAD,CAAlC,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,KAAK,EAAE,IAA3B;AAAiCC,EAAAA,MAAM,EAAE,CAACH,oBAAoB,CAAC,UAAD;AAA9D,CAAD,EAA+E;AAC9EI,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC;AAAa;AAA/B,IAAqD;AAC7D,WAAO,CAAC,CAAC,CAACN,QAAQ,CAACD,sBAAsB,CAAC,IAAD,CAAvB,CAAR,CACPQ,OADO,CACCP,QAAQ,CAACF,UAAU,CAACQ,YAAD,CAAX,CADT,EACqCE,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAD3E,CAAV;AAED;AAJ6E,CAA/E,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~toString(requireObjectCoercible(this))\n      .indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}