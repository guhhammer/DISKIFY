{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"C:/Users/Gustavo/Desktop/proj/Diskify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"C:/Users/Gustavo/Desktop/proj/Diskify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _regeneratorRuntime = require(\"C:/Users/Gustavo/Desktop/proj/Diskify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncIterator = require(\"C:/Users/Gustavo/Desktop/proj/Diskify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar fromString = require('uint8arrays/from-string');\n\nvar toString = require('uint8arrays/to-string');\n\nvar debug = require('debug');\n\nvar configure = require('../lib/configure.js');\n\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nvar log = debug__default['default']('ipfs-http-client:pubsub:subscribe');\n\nvar createSubscribe = function createSubscribe(options, subsTracker) {\n  return configure.configure(function (api) {\n    function subscribe(_x, _x2) {\n      return _subscribe.apply(this, arguments);\n    }\n\n    function _subscribe() {\n      _subscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic, handler) {\n        var options,\n            done,\n            fail,\n            result,\n            ffWorkaround,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n                options.signal = subsTracker.subscribe(topic, handler, options.signal);\n                result = new Promise(function (resolve, reject) {\n                  done = resolve;\n                  fail = reject;\n                });\n                ffWorkaround = setTimeout(function () {\n                  return done();\n                }, 1000);\n                api.post('pubsub/sub', {\n                  signal: options.signal,\n                  searchParams: toUrlSearchParams.toUrlSearchParams(_objectSpread({\n                    arg: topic\n                  }, options)),\n                  headers: options.headers\n                }).catch(function (err) {\n                  subsTracker.unsubscribe(topic, handler);\n                  fail(err);\n                }).then(function (response) {\n                  clearTimeout(ffWorkaround);\n\n                  if (!response) {\n                    return;\n                  }\n\n                  readMessages(response, {\n                    onMessage: handler,\n                    onEnd: function onEnd() {\n                      return subsTracker.unsubscribe(topic, handler);\n                    },\n                    onError: options.onError\n                  });\n                  done();\n                });\n                return _context2.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _subscribe.apply(this, arguments);\n    }\n\n    return subscribe;\n  })(options);\n};\n\nfunction readMessages(response, _ref) {\n  var onMessage = _ref.onMessage,\n      onEnd = _ref.onEnd,\n      onError = _ref.onError;\n\n  var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, msg;\n\n  return _regeneratorRuntime.async(function readMessages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          onError = onError || log;\n          _context.prev = 1;\n          _iteratorAbruptCompletion = false;\n          _didIteratorError = false;\n          _context.prev = 4;\n          _iterator = _asyncIterator(response.ndjson());\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(_iterator.next());\n\n        case 8:\n          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n            _context.next = 23;\n            break;\n          }\n\n          msg = _step.value;\n          _context.prev = 10;\n\n          if (msg.from) {\n            _context.next = 13;\n            break;\n          }\n\n          return _context.abrupt(\"continue\", 20);\n\n        case 13:\n          onMessage({\n            from: toString.toString(fromString.fromString(msg.from, 'base64pad'), 'base58btc'),\n            data: fromString.fromString(msg.data, 'base64pad'),\n            seqno: fromString.fromString(msg.seqno, 'base64pad'),\n            topicIDs: msg.topicIDs\n          });\n          _context.next = 20;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](10);\n          _context.t0.message = \"Failed to parse pubsub message: \".concat(_context.t0.message);\n          onError(_context.t0, false, msg);\n\n        case 20:\n          _iteratorAbruptCompletion = false;\n          _context.next = 6;\n          break;\n\n        case 23:\n          _context.next = 29;\n          break;\n\n        case 25:\n          _context.prev = 25;\n          _context.t1 = _context[\"catch\"](4);\n          _didIteratorError = true;\n          _iteratorError = _context.t1;\n\n        case 29:\n          _context.prev = 29;\n          _context.prev = 30;\n\n          if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n            _context.next = 34;\n            break;\n          }\n\n          _context.next = 34;\n          return _regeneratorRuntime.awrap(_iterator.return());\n\n        case 34:\n          _context.prev = 34;\n\n          if (!_didIteratorError) {\n            _context.next = 37;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 37:\n          return _context.finish(34);\n\n        case 38:\n          return _context.finish(29);\n\n        case 39:\n          _context.next = 44;\n          break;\n\n        case 41:\n          _context.prev = 41;\n          _context.t2 = _context[\"catch\"](1);\n\n          if (!isAbortError(_context.t2)) {\n            onError(_context.t2, true);\n          }\n\n        case 44:\n          _context.prev = 44;\n          onEnd();\n          return _context.finish(44);\n\n        case 47:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 41, 44, 47], [4, 25, 29, 39], [10, 16], [30,, 34, 38]], Promise);\n}\n\nvar isAbortError = function isAbortError(error) {\n  switch (error.type) {\n    case 'aborted':\n      return true;\n\n    case 'abort':\n      return true;\n\n    default:\n      return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;","map":{"version":3,"sources":["C:/Users/Gustavo/Desktop/proj/Diskify/node_modules/ipfs-http-client/cjs/src/pubsub/subscribe.js"],"names":["Object","defineProperty","exports","value","fromString","require","toString","debug","configure","toUrlSearchParams","_interopDefaultLegacy","e","debug__default","log","createSubscribe","options","subsTracker","api","subscribe","topic","handler","signal","result","Promise","resolve","reject","done","fail","ffWorkaround","setTimeout","post","searchParams","arg","headers","catch","err","unsubscribe","then","response","clearTimeout","readMessages","onMessage","onEnd","onError","ndjson","msg","from","data","seqno","topicIDs","message","isAbortError","error","type","name"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar fromString = require('uint8arrays/from-string');\nvar toString = require('uint8arrays/to-string');\nvar debug = require('debug');\nvar configure = require('../lib/configure.js');\nvar toUrlSearchParams = require('../lib/to-url-search-params.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar debug__default = /*#__PURE__*/_interopDefaultLegacy(debug);\n\nconst log = debug__default['default']('ipfs-http-client:pubsub:subscribe');\nconst createSubscribe = (options, subsTracker) => {\n  return configure.configure(api => {\n    async function subscribe(topic, handler, options = {}) {\n      options.signal = subsTracker.subscribe(topic, handler, options.signal);\n      let done;\n      let fail;\n      const result = new Promise((resolve, reject) => {\n        done = resolve;\n        fail = reject;\n      });\n      const ffWorkaround = setTimeout(() => done(), 1000);\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams.toUrlSearchParams({\n          arg: topic,\n          ...options\n        }),\n        headers: options.headers\n      }).catch(err => {\n        subsTracker.unsubscribe(topic, handler);\n        fail(err);\n      }).then(response => {\n        clearTimeout(ffWorkaround);\n        if (!response) {\n          return;\n        }\n        readMessages(response, {\n          onMessage: handler,\n          onEnd: () => subsTracker.unsubscribe(topic, handler),\n          onError: options.onError\n        });\n        done();\n      });\n      return result;\n    }\n    return subscribe;\n  })(options);\n};\nasync function readMessages(response, {onMessage, onEnd, onError}) {\n  onError = onError || log;\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue;\n        }\n        onMessage({\n          from: toString.toString(fromString.fromString(msg.from, 'base64pad'), 'base58btc'),\n          data: fromString.fromString(msg.data, 'base64pad'),\n          seqno: fromString.fromString(msg.seqno, 'base64pad'),\n          topicIDs: msg.topicIDs\n        });\n      } catch (err) {\n        err.message = `Failed to parse pubsub message: ${ err.message }`;\n        onError(err, false, msg);\n      }\n    }\n  } catch (err) {\n    if (!isAbortError(err)) {\n      onError(err, true);\n    }\n  } finally {\n    onEnd();\n  }\n}\nconst isAbortError = error => {\n  switch (error.type) {\n  case 'aborted':\n    return true;\n  case 'abort':\n    return true;\n  default:\n    return error.name === 'AbortError';\n  }\n};\n\nexports.createSubscribe = createSubscribe;\n"]},"metadata":{},"sourceType":"script"}