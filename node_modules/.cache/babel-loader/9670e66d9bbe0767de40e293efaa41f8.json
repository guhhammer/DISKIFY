{"ast":null,"code":"import _classCallCheck from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Gustavo/Desktop/proj/meme/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\Desktop\\\\proj\\\\meme\\\\src\\\\components\\\\Mint.js\";\nimport React, { Component } from 'react';\nimport './Mint.css';\nimport _cover_placeholder from '../cover_placeholder.png'; // Get artist address from metamask.\n\nvar _require = require('ipfs-http-client'),\n    create = _require.create;\n\nvar ipfs = create({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n});\n\nvar Mint = /*#__PURE__*/function (_Component) {\n  _inherits(Mint, _Component);\n\n  var _super = _createSuper(Mint);\n\n  function Mint(props) {\n    var _this2;\n\n    _classCallCheck(this, Mint);\n\n    _this2 = _super.call(this, props);\n\n    _this2.captureAlbumCover = function (event) {\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      var _this = _assertThisInitialized(_this2);\n\n      _this2.album_cover_pushed = false;\n\n      var _img = document.getElementById('img-cover');\n\n      _img.onload = function () {\n        URL.revokeObjectURL(_img.src);\n      };\n\n      _img.src = URL.createObjectURL(file);\n\n      reader.onloadend = function () {\n        var _cover = Buffer(reader.result);\n\n        ipfs.add(_cover).then(function (out) {\n          console.log(\"Album cover hash: \", out['path']);\n          _this.state.album_cover = 'https://ipfs.infura.io/ifps/' + out['path'];\n          _this.album_cover_pushed = true;\n        });\n      };\n\n      console.log(\"Album cover captured.\");\n    };\n\n    _this2.captureFiles = function (event) {\n      event.preventDefault();\n\n      var _this = _assertThisInitialized(_this2);\n\n      _this2.files_pushed = event.target.files.length;\n      _this2.files_counter = 0;\n      document.getElementById('textarea-displaytracks').value = '\\r\\n';\n\n      var _loop = function _loop() {\n        var file = event.target.files[i];\n\n        _this.state.track_names.push(file.name);\n\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = function () {\n          console.log(\"Track (\", file.name, \") captured.\");\n          var bdata = Buffer(reader.result);\n          ipfs.add(bdata).then(function (out) {\n            console.log(\"Track (\", file.name, \") hash: \", out['path']);\n            document.getElementById('textarea-displaytracks').value = (_this.files_counter + 1).toString() + ') ' + file.name + '\\r\\n';\n\n            _this.state.track_hashes.push('https://ipfs.infura.io/ipfs/' + out['path']);\n\n            _this.files_counter += 1;\n          });\n        };\n      };\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _loop();\n      }\n\n      console.log(\"Tracks captured.\");\n    };\n\n    _this2.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"Submitting the form...\");\n\n      while (_this2.album_cover_pushed === false) {\n        return;\n      }\n\n      while (_this2.files_counter < _this2.files_pushed) {\n        return;\n      }\n\n      _this2.state.album_name = document.getElementById(\"input-albumname\").value;\n      _this2.state.artist_name = document.getElementById(\"input-artistname\").value;\n      _this2.state.genres = document.getElementById(\"input-albumname\").value;\n      var currentDate = new Date();\n      _this2.state.release_date = currentDate.getFullYear().toString() + \"-\" + (currentDate.getMonth() + 1).toString() + \"-\" + currentDate.getDate();\n      _this2.state.artist_address = \"0x GET ADDRESS OF SENDER!!\";\n\n      var _this = _assertThisInitialized(_this2);\n\n      var _hash = \"\";\n      ipfs.add(JSON.stringify(_this2.state)).then(function (out) {\n        console.log(\"Minted Album Hash: \", out['path']);\n        _this.state.album_hash = out['path'];\n        console.log('https://ipfs.infura.io/ipfs/' + out['path']);\n      });\n      console.log(\"Mint done.\");\n    };\n\n    _this2.state = {\n      artist_address: null,\n      artist_name: null,\n      release_date: null,\n      album_name: null,\n      genres: null,\n      track_names: [],\n      album_cover: null,\n      track_hashes: [],\n      album_hash: null\n    };\n    _this2.album_cover_pushed = false;\n    _this2.files_pushed = 0;\n    _this2.files_counter = 0;\n    return _this2;\n  }\n\n  _createClass(Mint, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex grid grid-cols-1 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mr-auto ml-auto -mt-8 w-1/2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \" self-center ml-auto mr-auto w-1/2 h-1/2 min-h-96 min-w-96 max-w-96 max-h-96 border-4 border-black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: _cover_placeholder,\n        id: \"img-cover\",\n        className: \"h-full w-full Album_cover_display\",\n        alt: \"album cover image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"h-auto mt-4 text-4xl font-bold font-mono\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, \" Mint Your Album \"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-albumname\",\n        className: \"font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\",\n        placeholder: \" Album's Name \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-artistname\",\n        className: \"font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\",\n        placeholder: \" Artist Name(s) \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"input-albumgenres\",\n        className: \"font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 hover:bg-gray-100 border-4 border-transparent hover:border-black\",\n        placeholder: \" Album Genres \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"input-albumcover\",\n        className: \"w-5/6 h-auto text-4xl font-bold font-mono\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }, \" Select Image for Album Cover: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 142\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"input-albumcover\",\n        className: \"w-2/3 h-auto text-3xl\",\n        onChange: this.captureAlbumCover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"input-tracks\",\n        className: \"w-5/6 h-auto text-4xl font-bold font-mono\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, \" Select Image for Album Cover: \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 138\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"input-tracks\",\n        className: \"w-2/3 h-auto text-3xl\",\n        onChange: this.captureFiles,\n        webkitdirectory: true,\n        mozdirectory: true,\n        msdirectory: true,\n        odirectory: true,\n        directory: true,\n        multiple: \"multiple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"textarea-displaytracks\",\n        className: \"bg-red-100 mt-2 w-2/3 h-40 font-mono text-2xl bg-sroll\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }, \" No tracks yet :( \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"w-1/3 text-4xl h-auto font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white\",\n        value: \"Mint\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return Mint;\n}(Component);\n\nexport default Mint;","map":{"version":3,"sources":["C:/Users/Gustavo/Desktop/proj/meme/src/components/Mint.js"],"names":["React","Component","_cover_placeholder","require","create","ipfs","host","port","protocol","Mint","props","captureAlbumCover","event","file","target","files","reader","window","FileReader","readAsArrayBuffer","_this","album_cover_pushed","_img","document","getElementById","onload","URL","revokeObjectURL","src","createObjectURL","onloadend","_cover","Buffer","result","add","then","out","console","log","state","album_cover","captureFiles","preventDefault","files_pushed","length","files_counter","value","i","track_names","push","name","bdata","toString","track_hashes","onSubmit","album_name","artist_name","genres","currentDate","Date","release_date","getFullYear","getMonth","getDate","artist_address","_hash","JSON","stringify","album_hash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './Mint.css';\r\n\r\nimport _cover_placeholder from '../cover_placeholder.png';\r\n\r\n\r\n// Get artist address from metamask.\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass Mint extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n   \r\n    this.state = {\r\n\r\n      artist_address: null,\r\n      \r\n      artist_name: null,\r\n\r\n      release_date: null,\r\n      \r\n      album_name: null, \r\n\r\n      genres: null,\r\n          \r\n      track_names: [],\r\n\r\n      album_cover: null, \r\n\r\n      track_hashes: [], \r\n      \r\n      album_hash: null\r\n\r\n    };\r\n\r\n    this.album_cover_pushed = false;\r\n\r\n    this.files_pushed = 0;\r\n    this.files_counter = 0;\r\n\r\n  }\r\n\r\n\r\n  captureAlbumCover = (event) => {\r\n\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    const _this = this;\r\n    this.album_cover_pushed = false;\r\n\r\n    var _img = document.getElementById('img-cover');\r\n\r\n    _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n    _img.src = URL.createObjectURL(file);\r\n\r\n    reader.onloadend = () => {\r\n\r\n      const _cover = Buffer(reader.result);\r\n\r\n      ipfs.add(_cover).then(function(out){\r\n\r\n        console.log(\"Album cover hash: \", out['path']);\r\n\r\n        _this.state.album_cover = 'https://ipfs.infura.io/ifps/' + out['path'];\r\n\r\n        _this.album_cover_pushed = true;\r\n\r\n      });\r\n\r\n    }\r\n\r\n    console.log(\"Album cover captured.\")\r\n\r\n  }\r\n\r\n\r\n  captureFiles = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    const _this = this;\r\n\r\n    this.files_pushed = event.target.files.length;\r\n    this.files_counter = 0;\r\n\r\n    document.getElementById('textarea-displaytracks').value = '\\r\\n';\r\n\r\n    for(var i = 0; i < event.target.files.length; i++){\r\n      \r\n      const file = event.target.files[i];\r\n      \r\n      _this.state.track_names.push(file.name);\r\n      \r\n      const reader = new window.FileReader();\r\n      \r\n      reader.readAsArrayBuffer(file);\r\n\r\n      reader.onloadend = () => {\r\n\r\n        console.log(\"Track (\", file.name,\") captured.\");\r\n \r\n        const bdata = Buffer(reader.result);\r\n\r\n        ipfs.add(bdata).then( function(out) {\r\n\r\n          console.log(\"Track (\",file.name,\") hash: \", out['path']);\r\n\r\n          document.getElementById('textarea-displaytracks').value = (_this.files_counter+1).toString() +') ' + file.name + '\\r\\n';\r\n\r\n          _this.state.track_hashes.push( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n          _this.files_counter += 1;\r\n\r\n        });        \r\n\r\n      }\r\n  \r\n    }\r\n\r\n    console.log(\"Tracks captured.\");\r\n\r\n  }\r\n\r\n\r\n  onSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    console.log(\"Submitting the form...\");\r\n\r\n    while( this.album_cover_pushed === false ){ return; }\r\n\r\n    while( this.files_counter < this.files_pushed ){ return; } \r\n\r\n    this.state.album_name = document.getElementById(\"input-albumname\").value;\r\n\r\n    this.state.artist_name = document.getElementById(\"input-artistname\").value;\r\n\r\n    this.state.genres = document.getElementById(\"input-albumname\").value;\r\n\r\n\r\n    const currentDate = new Date();\r\n\r\n    this.state.release_date = \r\n      currentDate.getFullYear().toString()+\"-\"+\r\n      (currentDate.getMonth()+1).toString()+\"-\"+\r\n      currentDate.getDate();\r\n\r\n    this.state.artist_address = \"0x GET ADDRESS OF SENDER!!\";\r\n\r\n\r\n    const _this = this;\r\n    var _hash = \"\";\r\n\r\n    ipfs.add( JSON.stringify(this.state) ).then( function(out) { \r\n\r\n      console.log(\"Minted Album Hash: \", out['path']);\r\n\r\n      _this.state.album_hash = out['path'];\r\n\r\n      console.log( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n    });\r\n\r\n    console.log(\"Mint done.\");\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex grid grid-cols-1 text-center\">\r\n              <div className=\"mr-auto ml-auto -mt-8 w-1/2\">\r\n                \r\n                <div className=' self-center ml-auto mr-auto w-1/2 h-1/2 min-h-96 min-w-96 max-w-96 max-h-96 border-4 border-black'> \r\n                <img src={_cover_placeholder} id='img-cover' className=\"h-full w-full Album_cover_display\" alt=\"album cover image\" />\r\n                </div>\r\n              \r\n                <p className='h-auto mt-4 text-4xl font-bold font-mono'> Mint Your Album </p>\r\n                \r\n                <form onSubmit={this.onSubmit}> \r\n                  \r\n                  <input type='text' id='input-albumname' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Album's Name \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-artistname' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Artist Name(s) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-albumgenres' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Album Genres \" />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-albumcover' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Select Image for Album Cover: </label><br/>\r\n                  <input type='file' id='input-albumcover' className='w-2/3 h-auto text-3xl' onChange={this.captureAlbumCover} />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-tracks' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Select Image for Album Cover: </label><br/>\r\n                  <input type='file' id='input-tracks' className=\"w-2/3 h-auto text-3xl\" onChange={this.captureFiles} webkitdirectory mozdirectory msdirectory odirectory directory multiple=\"multiple\" />\r\n                  <br/>\r\n\r\n                  <textarea id='textarea-displaytracks' className='bg-red-100 mt-2 w-2/3 h-40 font-mono text-2xl bg-sroll' disabled> No tracks yet :( </textarea>\r\n\r\n\r\n                  <br/>\r\n                  <input type='submit' className='w-1/3 text-4xl h-auto font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white' value=\"Mint\" />\r\n                  <br/>\r\n                  <br/>\r\n\r\n                </form>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mint;\r\n"]},"metadata":{},"sourceType":"module"}