{"ast":null,"code":"'use strict'; // https://tc39.github.io/proposal-setmap-offrom/\n\nvar aCallable = require('../internals/a-callable');\n\nvar aConstructor = require('../internals/a-constructor');\n\nvar bind = require('../internals/function-bind-context');\n\nvar iterate = require('../internals/iterate');\n\nmodule.exports = function from(source\n/* , mapFn, thisArg */\n) {\n  var length = arguments.length;\n  var mapFn = length > 1 ? arguments[1] : undefined;\n  var mapping, array, n, boundFunction;\n  aConstructor(this);\n  mapping = mapFn !== undefined;\n  if (mapping) aCallable(mapFn);\n  if (source == undefined) return new this();\n  array = [];\n\n  if (mapping) {\n    n = 0;\n    boundFunction = bind(mapFn, length > 2 ? arguments[2] : undefined, 2);\n    iterate(source, function (nextItem) {\n      array.push(boundFunction(nextItem, n++));\n    });\n  } else {\n    iterate(source, array.push, {\n      that: array\n    });\n  }\n\n  return new this(array);\n};","map":{"version":3,"sources":["C:/Users/Gustavo/Desktop/proj/meme/node_modules/core-js-pure/internals/collection-from.js"],"names":["aCallable","require","aConstructor","bind","iterate","module","exports","from","source","length","arguments","mapFn","undefined","mapping","array","n","boundFunction","nextItem","push","that"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,4BAAD,CAA1B;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,oCAAD,CAAlB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,sBAAD,CAArB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC;AAAO;AAArB,EAA6C;AAC5D,MAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;AACA,MAAIE,KAAK,GAAGF,MAAM,GAAG,CAAT,GAAaC,SAAS,CAAC,CAAD,CAAtB,GAA4BE,SAAxC;AACA,MAAIC,OAAJ,EAAaC,KAAb,EAAoBC,CAApB,EAAuBC,aAAvB;AACAd,EAAAA,YAAY,CAAC,IAAD,CAAZ;AACAW,EAAAA,OAAO,GAAGF,KAAK,KAAKC,SAApB;AACA,MAAIC,OAAJ,EAAab,SAAS,CAACW,KAAD,CAAT;AACb,MAAIH,MAAM,IAAII,SAAd,EAAyB,OAAO,IAAI,IAAJ,EAAP;AACzBE,EAAAA,KAAK,GAAG,EAAR;;AACA,MAAID,OAAJ,EAAa;AACXE,IAAAA,CAAC,GAAG,CAAJ;AACAC,IAAAA,aAAa,GAAGb,IAAI,CAACQ,KAAD,EAAQF,MAAM,GAAG,CAAT,GAAaC,SAAS,CAAC,CAAD,CAAtB,GAA4BE,SAApC,EAA+C,CAA/C,CAApB;AACAR,IAAAA,OAAO,CAACI,MAAD,EAAS,UAAUS,QAAV,EAAoB;AAClCH,MAAAA,KAAK,CAACI,IAAN,CAAWF,aAAa,CAACC,QAAD,EAAWF,CAAC,EAAZ,CAAxB;AACD,KAFM,CAAP;AAGD,GAND,MAMO;AACLX,IAAAA,OAAO,CAACI,MAAD,EAASM,KAAK,CAACI,IAAf,EAAqB;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAArB,CAAP;AACD;;AACD,SAAO,IAAI,IAAJ,CAASA,KAAT,CAAP;AACD,CAnBD","sourcesContent":["'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar aCallable = require('../internals/a-callable');\nvar aConstructor = require('../internals/a-constructor');\nvar bind = require('../internals/function-bind-context');\nvar iterate = require('../internals/iterate');\n\nmodule.exports = function from(source /* , mapFn, thisArg */) {\n  var length = arguments.length;\n  var mapFn = length > 1 ? arguments[1] : undefined;\n  var mapping, array, n, boundFunction;\n  aConstructor(this);\n  mapping = mapFn !== undefined;\n  if (mapping) aCallable(mapFn);\n  if (source == undefined) return new this();\n  array = [];\n  if (mapping) {\n    n = 0;\n    boundFunction = bind(mapFn, length > 2 ? arguments[2] : undefined, 2);\n    iterate(source, function (nextItem) {\n      array.push(boundFunction(nextItem, n++));\n    });\n  } else {\n    iterate(source, array.push, { that: array });\n  }\n  return new this(array);\n};\n"]},"metadata":{},"sourceType":"script"}