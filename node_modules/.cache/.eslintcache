[{"C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\index.js":"1","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\serviceWorker.js":"2","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\App.js":"3","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\NavBar.js":"4","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Diskify.js":"5","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Mint.js":"6","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Me.js":"7","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Search.js":"8","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\View.js":"9"},{"size":693,"mtime":1634011319727,"results":"10","hashOfConfig":"11"},{"size":5086,"mtime":1633888358721,"results":"12","hashOfConfig":"11"},{"size":812,"mtime":1634199264282,"results":"13","hashOfConfig":"11"},{"size":1312,"mtime":1634016143005,"results":"14","hashOfConfig":"11"},{"size":7821,"mtime":1634763645483,"results":"15","hashOfConfig":"11"},{"size":10821,"mtime":1634763170262,"results":"16","hashOfConfig":"11"},{"size":9174,"mtime":1634848748045,"results":"17","hashOfConfig":"11"},{"size":6967,"mtime":1634762613477,"results":"18","hashOfConfig":"11"},{"size":8087,"mtime":1634760313090,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14i3xkg",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\index.js",[],["45","46"],"C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\serviceWorker.js",[],"C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\App.js",[],"C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\NavBar.js",["47","48","49","50"],"import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './NavBar.css';\r\nimport 'tailwindcss/tailwind.css';\r\n\r\nimport logo from '../logo.png';\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className='ml-2 mt-2 mr-2 text-3xl font-mono bg-black grid grid-flow-row grid-rows-1 grid-cols-6 place-items-center'>\r\n\t\t\t\t\r\n\t\t\t\t<Link to='/'>\t<img src={logo} id='navbar-logo' className=\"App-logo w-80\" alt=\"logo\" /> </Link>\r\n\r\n\t\t\t\t<Link to=\"/\" className=\"text-gray-300 hover:bg-gray-200 hover:text-black border-8 border-black hover:border-gray-200 rounded-xl no-underline hover:no-underline\"> <a> Home </a> </Link> \r\n\t\t\t\t<Link to=\"/me\" className=\"text-gray-300 hover:bg-gray-200 hover:text-black border-8 border-black hover:border-gray-200 rounded-xl no-underline hover:no-underline\"> <a> Me </a> </Link>\r\n\r\n\t\t\t\t<Link to=\"/mint\" className=\"text-gray-300 hover:bg-gray-200 hover:text-black border-8 border-black hover:border-gray-200 rounded-xl no-underline hover:no-underline\"> <a> Mint </a> </Link>\r\n\t\t\t\t<Link to=\"/search\" className=\"text-gray-300 hover:bg-gray-200 hover:text-black border-8 border-black hover:border-gray-200 rounded-xl no-underline hover:no-underline\"> <a> Search </a> </Link>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Diskify.js",["51","52","53","54","55"],"import React, { Component } from 'react';\r\nimport './Diskify.css';\r\n\r\nimport Web3 from 'web3';\r\nimport Abi_Diskify from '../abis/Diskify.json';\r\n\r\nimport logo_ from '../user.png'; \r\n\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass Diskify extends Component {\r\n\r\n\tasync componentWillMount() {\r\n\r\n    await this.loadWeb3();\r\n\r\n    await this.loadFrame();\r\n\r\n  }\r\n\r\n  async loadFrame(){\r\n\r\n  \tconst web3 = window.web3;\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.eth_account = accounts[0];\r\n\r\n\t  const networdId = await web3.eth.net.getId();\r\n    const networkData = Abi_Diskify.networks[networdId];\r\n\r\n    console.log(networkData, networdId)\r\n\r\n    if (networkData) {\r\n\r\n      const abi = Abi_Diskify.abi;\r\n      this.contract = new web3.eth.Contract(abi, networkData.address);\r\n\r\n\r\n    } else { window.alert(\"Contract not deployed.\"); return; }\r\n  \r\n    const _this = this;\r\n\r\n\r\n   \t_this.contract.methods.getAlbum(4).call()\r\n\r\n\t\t\t.then( (res) => {\r\n\r\n\t    _this.loadValuesInPage(res['album_info_pointer_ipfs_hash'], _this, 1);\r\n\r\n\t   })\r\n\t\t .then( () => {\r\n\r\n\t\t\t \t_this.contract.methods.getAlbum(3).call()\r\n\r\n\t\t\t\t\t.then( (res) => {\r\n\r\n\t\t\t    _this.loadValuesInPage(res['album_info_pointer_ipfs_hash'], _this, 2);\r\n\r\n\t\t\t  })\r\n\r\n\t\t })\r\n\t\t .then( () => {\r\n\r\n\t\t \t_this.contract.methods.getAlbum(2).call()\r\n\r\n\t\t\t\t.then( (res) => {\r\n\r\n\t\t    _this.loadValuesInPage(res['album_info_pointer_ipfs_hash'], _this, 3);\r\n\r\n\t\t   })\r\n\r\n\t\t })\r\n\t\t .catch( () => { \r\n\r\n    \tconsole.log('nnn');\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  loadValuesInPage = (ipfs_hash, __this, tag_id) => {\r\n\r\n  \tconst correct_path = 'https://ipfs.infura.io/ipfs/'+ ipfs_hash;\r\n\r\n    fetch(correct_path).then( (res) => res.text())\r\n    .then( (res) => {\r\n\r\n      const __album = JSON.parse(res);\r\n\r\n      console.log(\"000\",__album);\r\n\r\n      var _img = document.getElementById('img-'+tag_id);\r\n\r\n      _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n      _img.src = 'https://ipfs.infura.io/ipfs/'+__album.album_cover.split('/')[4];\r\n\r\n      document.getElementById('albumname-'+tag_id).innerHTML = __album.album_name;\r\n      document.getElementById('genres-'+tag_id).innerHTML = __album.genres;\r\n      document.getElementById('artistname-'+tag_id).innerHTML = __album.artist_name;\r\n      document.getElementById('releasedate-'+tag_id).innerHTML = __album.release_date;\r\n\r\n      this.high_refs.push(ipfs_hash);\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\tconstructor (props) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {};\r\n\r\n\t\tthis.contract = '';\r\n\r\n\t\tthis.eth_account = '';\r\n\r\n\t\tthis.high_refs = [];\r\n\r\n\t}\r\n\r\n\r\n  async loadWeb3() {\r\n\r\n\t  if (window.ethereum) {\r\n\r\n\t    window.web3 = new Web3(window.ethereum);\r\n\t    await window.ethereum.enable();\r\n\r\n\t  } if (window.web3) {\r\n\r\n\t    window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n\t  } else {\r\n\r\n\t  \tconsole.log(\"User did not connect its metamask wallet.\");\r\n\r\n\t  }\r\n\r\n\t}\r\n\r\n\r\n\thighlight1 = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\twindow.location.assign('/view/'+this.high_refs[0]);\r\n\r\n\t}\r\n\r\n\thighlight2 = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\twindow.location.assign('/view/'+this.high_refs[1]);\r\n\r\n\t}\r\n\r\n\thighlight3 = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\twindow.location.assign('/view/'+this.high_refs[2]);\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n\r\n\r\n\t\t\t\t<p className=\"text-4xl font-bold italic ml-20 mb-10 mt-4 text-gray-800\"> On Highlight: </p>\r\n\r\n\t\t\t\t<div onClick={this.highlight1} className=\"grid grid-flow-col grid-rows-6 grid-cols-2 gap-1 lg:flex lg:items-center mt-8 mb-20 h-96 p-10 sm:p-8 object-center\">\r\n\t\t\t\r\n\t\t\t\t\t<div onClick=\"\" className=\"grid grid-rows-1 grid-cols-2 w-full bg-gray-100 border-gray-300  h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\">\r\n\r\n\t\t\t  \t\t<div className='w-1/2 h-1/2 min-w-80 min-h-80 h-auto '>\r\n\r\n\t\t\t  \t\t<img src='' id='img-1' className='h-auto w-auto' />\r\n\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t<div className='grid grid-rows-3 grid-cols-1 text-3xl font-mono'>\r\n\r\n\t\t\t  \t\t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t  \t\t\t<p className='font-mono font-bold' id='albumname-1'>  </p>\r\n\t\t\t\t  \t\t\r\n\t\t\t\t  \t\t\t<p className='text-gray-600 font-italic' id='genres-1'> genres </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t\t\t\t\t<p className='font-mono font-bold' id='artistname-1'> artistname </p>\r\n\r\n\t\t\t\t\t\t\t\t<p className='text-gray-600 font-italic' id='releasedate-1'> release date </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2 content-center justify-items-center'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button onclick={this.highlight1} className=\"justify-center h-20 w-40 rounded-lg bg-black text-white text-3xl border-4 border-black hover:bg-gray-100 hover:text-black\"> View </button>\r\n\r\n\t\t\t\t  \t\t</div>\r\n        \t\t\t\r\n\t\t\t  \t\t</div>\r\n\r\n\t\t\t  \t</div>\r\n\t\t\t \t\r\n\t\t\t \t</div>\t\r\n\t\t\t \t<div onClick={this.highlight2} className=\"grid grid-flow-col grid-rows-6 grid-cols-2 gap-1 lg:flex lg:items-center mt-8 mb-20 h-96 p-10 sm:p-8 object-center\">\r\n\r\n\t\t\t  \t<div onClick=\"\" className=\"grid grid-rows-1 grid-cols-2 w-full bg-gray-100 border-gray-300  h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\">\r\n\r\n\t\t\t  \t\t<div className='w-1/2 h-1/2 min-w-80 min-h-80 h-auto '>\r\n\r\n\t\t\t  \t\t<img src='' id='img-2' className='h-auto w-auto' />\r\n\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t<div className='grid grid-rows-3 grid-cols-1 text-3xl font-mono'>\r\n\r\n\t\t\t  \t\t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t  \t\t\t<p className='font-mono font-bold' id='albumname-2'>  albumname </p>\r\n\t\t\t\t  \t\t\r\n\t\t\t\t  \t\t\t<p className='text-gray-600 font-italic' id='genres-2'> genres </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t\t\t\t\t<p className='font-mono font-bold' id='artistname-2'> artistname </p>\r\n\r\n\t\t\t\t\t\t\t\t<p className='text-gray-600 font-italic' id='releasedate-2'> release date </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2 content-center justify-items-center'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button onclick={this.highlight2} className=\"justify-center h-20 w-40 rounded-lg bg-black text-white text-3xl border-4 border-black hover:bg-gray-100 hover:text-black\"> View </button>\r\n\r\n\t\t\t\t  \t\t</div>\r\n        \t\t\t\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t  </div>\r\n\t\t\t\t\r\n\t\t\t\t<div onClick={this.highlight3} className=\"grid grid-flow-col grid-rows-6 grid-cols-2 gap-1 lg:flex lg:items-center mt-8 mb-20 h-96 p-10 sm:p-8 object-center\">\r\n\t\t  \t\t<div onClick=\"\" className=\"grid grid-rows-1 grid-cols-2 w-full bg-gray-100 border-gray-300  h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\">\r\n\r\n\t\t\t  \t\t<div className='w-1/2 h-1/2 min-w-80 min-h-80 h-auto '>\r\n\r\n\t\t\t\t  \t\t<img src='' id='img-3' className='h-auto w-auto' />\r\n\r\n\t\t\t  \t\t</div>\r\n\t\t\t  \t\t\r\n\t\t\t  \t\t<div className='grid grid-rows-3 grid-cols-1 text-3xl font-mono'>\r\n\r\n\t\t\t  \t\t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t  \t\t\t<p className='font-mono font-bold' id='albumname-3'>  albumname </p>\r\n\t\t\t\t  \t\t\r\n\t\t\t\t  \t\t\t<p className='text-gray-600 font-italic' id='genres-3'> genres </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2'>\r\n\r\n\t\t\t\t\t\t\t\t<p className='font-mono font-bold' id='artistname-3'> artistname </p>\r\n\r\n\t\t\t\t\t\t\t\t<p className='text-gray-600 font-italic' id='releasedate-3'> release date </p>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\r\n\t\t\t\t  \t\t<div className='grid grid-cols-2 content-center justify-items-center'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button onclick={this.highlight3} className=\"justify-center h-20 w-40 rounded-lg bg-black text-white text-3xl border-4 border-black hover:bg-gray-100 hover:text-black\"> View </button>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t      \t\t\t\r\n\t\t\t\t  \t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t </div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default Diskify;\r\n","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Mint.js",["56","57","58","59","60","61","62","63"],"import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './Mint.css';\r\nimport Diskify from '../abis/Diskify.json';\r\nimport _cover_placeholder from '../cover_placeholder.png';\r\n\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass Mint extends Component {\r\n\r\n\r\n  async componentWillMount() {\r\n\r\n    await this.loadWeb3();\r\n\r\n    await this.loadBlockchainData();\r\n\r\n  }\r\n\r\n\r\n  async loadBlockchainData() {\r\n\r\n    const web3 = window.web3;\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.eth_account = accounts[0];\r\n\r\n    document.getElementById('input-youraddress').value = this.eth_account;\r\n\r\n    console.log(accounts);\r\n\r\n    const networdId = await web3.eth.net.getId();\r\n    const networkData = Diskify.networks[networdId];\r\n\r\n    console.log(networkData, networdId)\r\n\r\n    if (networkData) {\r\n\r\n      const abi = Diskify.abi;\r\n      this.contract = new web3.eth.Contract(abi, networkData.address);\r\n\r\n\r\n    } else { window.alert(\"Contract not deployed.\"); return; }\r\n    \r\n    console.log(this.contract);\r\n\r\n  }\r\n\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n   \r\n    this.state = {\r\n\r\n      artist_address: null,\r\n      \r\n      artist_name: null,\r\n\r\n      release_date: null,\r\n      \r\n      album_name: null, \r\n\r\n      genres: null,\r\n          \r\n      track_names: [],\r\n\r\n      album_cover: null, \r\n\r\n      track_hashes: [], \r\n      \r\n      album_hash: null\r\n\r\n    };\r\n\r\n    this.eth_account = '';\r\n\r\n    this.contract = null;\r\n\r\n    this._memehash = '';\r\n\r\n    this.album_cover_pushed = false;\r\n\r\n    this.files_pushed = 0;\r\n    this.files_counter = 0;\r\n\r\n  }\r\n\r\n\r\n  async loadWeb3() {\r\n\r\n    if (window.ethereum) {\r\n\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n\r\n    } if (window.web3) {\r\n\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n    } else {\r\n\r\n      console.log(\"User did not connect its metamask wallet.\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  captureAlbumCover = (event) => {\r\n\r\n    event.preventDefault(); \r\n\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    const _this = this;\r\n    this.album_cover_pushed = false;\r\n\r\n    var _img = document.getElementById('img-cover');\r\n\r\n    _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n    _img.src = URL.createObjectURL(file);\r\n\r\n    reader.onloadend = () => {\r\n\r\n      const _cover = Buffer(reader.result);\r\n\r\n      ipfs.add(_cover).then(function(out){\r\n\r\n        console.log(\"Album cover hash: \", out['path']);\r\n\r\n        _this.state.album_cover = 'https://ipfs.infura.io/ifps/' + out['path'];\r\n\r\n        _this.album_cover_pushed = true;\r\n\r\n      });\r\n\r\n    }\r\n\r\n    console.log(\"Album cover captured.\");\r\n\r\n  }\r\n\r\n\r\n  captureFiles = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    const _this = this;\r\n\r\n    this.files_pushed = event.target.files.length;\r\n    this.files_counter = 0;\r\n\r\n    document.getElementById('textarea-displaytracks').value = '\\r\\n';\r\n\r\n    for(var i = 0; i < event.target.files.length; i++){\r\n      \r\n      const file = event.target.files[i];\r\n      \r\n      _this.state.track_names.push(file.name);\r\n      \r\n      const reader = new window.FileReader();\r\n      \r\n      reader.readAsArrayBuffer(file);\r\n\r\n      reader.onloadend = () => {\r\n\r\n        console.log(\"Track (\", file.name,\") captured.\");\r\n \r\n        const bdata = Buffer(reader.result);\r\n\r\n        ipfs.add(bdata).then( function(out) {\r\n\r\n          console.log(\"Track (\",file.name,\") hash: \", out['path']);\r\n\r\n          document.getElementById('textarea-displaytracks').value += (_this.files_counter+1).toString() +') ' + file.name + '\\r\\n';\r\n\r\n          _this.state.track_hashes.push( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n          _this.files_counter += 1;\r\n\r\n        });        \r\n\r\n      }\r\n  \r\n    }\r\n\r\n    console.log(\"Tracks captured.\");\r\n\r\n  }\r\n\r\n\r\n  onSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    console.log(\"Submitting the form...\");\r\n\r\n    while( this.album_cover_pushed === false ){ return; }\r\n\r\n    while( this.files_counter < this.files_pushed || this.files_counter === 0){ return; } \r\n\r\n    var _ = document.getElementById(\"input-artistname\").value;\r\n\r\n    if (_.length < 1){\r\n       this.state.artist_name = \"anon\";\r\n    } else { this.state.artist_name = _;}\r\n\r\n\r\n    this.state.album_name = document.getElementById(\"input-albumname\").value;\r\n\r\n    this.state.genres = document.getElementById(\"input-albumgenres\").value;\r\n\r\n    const currentDate = new Date();\r\n\r\n    this.state.release_date = \r\n      currentDate.getFullYear().toString()+\"-\"+\r\n      (currentDate.getMonth()+1).toString()+\"-\"+\r\n      currentDate.getDate();\r\n\r\n    this.state.artist_address = this.eth_account;\r\n\r\n\r\n    _ = document.getElementById('input-initialoffer').value;\r\n    if (_.length < 1){\r\n      _ = 1;\r\n    }\r\n    const initial_price = ( +( _ ) ) * 100000;\r\n\r\n    _ = document.getElementById('input-diskifyroyalties').value;\r\n    if (_.length < 1){\r\n      _ = 1;\r\n    } else if ( +(_) > 5.0 || +(_) < 1.0){ _ = 5.0; }\r\n    const diskify_royalties = parseInt( +(_) * 10 );\r\n\r\n    _ = document.getElementById('input-artistroyalties').value;\r\n    if (_.length < 1){\r\n      _ = 1;\r\n    } else if ( +(_) > 5.0 || +(_) < 1.0){ _ = 5.0; }\r\n    const artist_royalties = parseInt( +(_) * 10 );\r\n\r\n    _ = document.getElementById('input-ncopies').value;\r\n    if (_.length < 1){\r\n      _ = 1;\r\n    } \r\n    const n_copies = parseInt( _ );\r\n\r\n\r\n    const _this = this;\r\n    var _hash = \"\";\r\n\r\n\r\n    ipfs.add( JSON.stringify(this.state) ).then( function(out) { \r\n\r\n      console.log(\"Minted Album Hash: \", out['path']);\r\n\r\n      _this.state.album_hash = out['path'];\r\n\r\n      console.log( 'https://ipfs.infura.io/ipfs/' + out['path'] );\r\n\r\n    console.log(_this.state.album_hash, diskify_royalties, artist_royalties, initial_price, n_copies, _this.state.artist_name)\r\n   \r\n      _this.contract.methods\r\n      .setAlbum(_this.state.album_hash, diskify_royalties, artist_royalties, initial_price, n_copies, _this.state.artist_name)\r\n      .send({from: _this.eth_account})\r\n      .then((res) => {\r\n\r\n        console.log(res);\r\n\r\n      })\r\n      .catch( _ => {\r\n\r\n        console.log(\"No res\");\r\n\r\n      });\r\n\r\n\r\n\r\n    });\r\n\r\n    console.log(\"Mint done.\");\r\n\r\n    // window.location.assign('/search');\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex grid grid-cols-1 text-center\">\r\n              <div className=\"mr-auto ml-auto -mt-8 w-1/2\">\r\n                \r\n                <div className=' self-center ml-auto mr-auto w-1/2 h-1/2 min-h-96 min-w-96 max-w-96 max-h-96 border-4 border-black'> \r\n                <img src={_cover_placeholder} id='img-cover' className=\"h-full w-full Album_cover_display\" alt=\"album cover image\" />\r\n                </div>\r\n              \r\n                <p className='h-auto mt-4 text-4xl font-bold font-mono'> Mint Your Album </p>\r\n                \r\n                <form onSubmit={this.onSubmit}> \r\n                  \r\n                  <input type='text' id='input-youraddress' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' value='' disabled/>\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-albumname' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Album's Name \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-artistname' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Artist Name(s) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-albumgenres' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2  hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Album Genres \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-initialoffer' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2  hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Initial Price (in ETH) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-diskifyroyalties' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2  hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Diskify Royalties (1-5%) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-artistroyalties' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Artist Royalties (1-5%) \" />\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-ncopies' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Album Number of Copies \" />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-albumcover' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Select Album Cover Image: </label><br/>\r\n                  <input type='file' id='input-albumcover' className='w-2/3 h-auto text-3xl' onChange={this.captureAlbumCover} />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-tracks' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Select Album's Tracks: </label><br/>\r\n                  <input type='file' id='input-tracks' className=\"w-2/3 h-auto text-3xl\" onChange={this.captureFiles} webkitdirectory mozdirectory msdirectory odirectory directory multiple=\"multiple\" />\r\n                  <br/>\r\n\r\n                  <textarea id='textarea-displaytracks' className='bg-gray-200 border-4 border-gray-300 rounded-sm mt-2 w-2/3 h-40 font-mono text-xl bg-sroll' disabled> No tracks yet :( </textarea>\r\n\r\n                  <br/>\r\n                  <input type='submit' className='w-1/3 mt-2 mb-2 text-4xl h-auto font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white' value=\"Mint\" />\r\n                  <br/>\r\n                  <br/>\r\n\r\n                </form>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mint;\r\n","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Me.js",["64","65","66","67","68"],"import React, { Component } from 'react';\r\nimport './Me.css';\r\nimport _user from '../user.png';\r\nimport Web3 from 'web3';\r\nimport Diskify from '../abis/Diskify.json';\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n      \r\nclass Me extends Component {\r\n\r\n\r\n  async componentWillMount() {\r\n\r\n    await this.loadWeb3();\r\n\r\n    await this.loadBlockchainPersonData();\r\n\r\n  }\r\n\r\n\r\n  async loadBlockchainPersonData() {\r\n\r\n    const web3 = window.web3;\r\n    const _this = this;\r\n\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.eth_account = accounts[0];\r\n\r\n    console.log(this.eth_account);\r\n\r\n    const networdId = await web3.eth.net.getId();\r\n    const networkData = Diskify.networks[networdId];\r\n\r\n    console.log(networkData, networdId)\r\n\r\n    if (networkData) {\r\n\r\n      const abi = Diskify.abi;\r\n      this.contract = new web3.eth.Contract(abi, networkData.address);\r\n\r\n      this.contract_address = networkData.address;\r\n\r\n    } else { window.alert(\"Contract not deployed.\"); return; }\r\n\r\n    console.log(this.contract);\r\n\r\n    _this.contract.methods.getPerson(_this.eth_account).call({from: _this.eth_account}).then((res) => {\r\n\r\n      _this.perfil_ipfs = res;\r\n\r\n      console.log('Perfil ipfs hash:', res);\r\n\r\n      _this.loadValuesInPage(res, _this);\r\n\r\n    }).catch(() => {\r\n\r\n\r\n      console.log('IPFS hash not initialized yet.')\r\n\r\n\r\n    } );\r\n\r\n  }\r\n\r\n\r\n  async loadValuesInPage(ipfs_hash, __this) {\r\n\r\n    if(this.perfil_ipfs.length == 0){ return; }\r\n\r\n    fetch('https://ipfs.infura.io/ipfs/'+ipfs_hash).then( (res) => res.text())\r\n    .then( (res) => {\r\n\r\n      const __perfil = JSON.parse(res);\r\n\r\n\r\n      __this.state.perfil_photo = __perfil.perfil_photo;\r\n      __this.state.status_approved_as_artist = __perfil.status_approved_as_artist;\r\n      __this.state.my_name = __perfil.my_name;\r\n      __this.state.my_bio = __perfil.my_bio;\r\n      __this.state.creation_date = __perfil.creation_date;\r\n      __this.state.person_hash = __perfil.person_hash;\r\n\r\n      \r\n      console.log(\"-->\", __perfil.perfil_photo)\r\n      \r\n      var _img = document.getElementById('img-cover');\r\n\r\n      _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n      _img.src = __perfil.perfil_photo;\r\n\r\n      var _aux = 'fan';\r\n\r\n      if( __this.state.status_approved_as_artist ){ _aux = 'artist'}\r\n\r\n      document.getElementById('input-creationdate').value = \" Creation Date: \"+__this.state.creation_date;\r\n      document.getElementById('input-currentstatus').value = \" Current Status: \"+_aux;\r\n      document.getElementById('input-myname').value = __this.state.my_name;\r\n      document.getElementById('textarea-mybio').value = __this.state.my_bio;\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\tconstructor(props) {\r\n\r\n    super(props);\r\n    \r\n    this.contract = '';\r\n\r\n    this.contract_address = '';\r\n\r\n    this.eth_account = '';\r\n\r\n    this.state = {\r\n\r\n    \tperfil_photo: null,\r\n    \tstatus_approved_as_artist: null,\r\n    \tmy_name: null,\r\n    \tmy_bio: null,\r\n    \tcreation_date: null,\r\n\r\n    \tperson_hash: null\r\n\r\n    };\r\n\r\n    this.waiters = {\r\n\r\n    \tphoto_trigerred: false,\r\n\r\n    \tstatus_trigerred: false\r\n\r\n    };\r\n\r\n    this.perfil_ipfs = '';\r\n\r\n  }\r\n\r\n\r\n  async loadWeb3() {\r\n\r\n    if (window.ethereum) {\r\n\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n\r\n    } if (window.web3) {\r\n\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n    } else {\r\n\r\n      console.log(\"User did not connect its metamask wallet.\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\tcapturePerfilPhoto = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.waiters.photo_trigerred = true;\r\n\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    const _this = this;\r\n\r\n    var _img = document.getElementById('img-cover');\r\n\r\n    _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n    _img.src = URL.createObjectURL(file);\r\n\r\n    reader.onloadend = () => {\r\n\r\n      const _cover = Buffer(reader.result);\r\n\r\n      ipfs.add(_cover).then(function(out){\r\n\r\n        console.log(\"Perfil photo hash: \", out['path']);\r\n\r\n        _this.state.perfil_photo = 'https://ipfs.infura.io/ipfs/' + out['path'];\r\n\r\n        _this.waiters.photo_trigerred = false;\r\n\r\n      });\r\n\r\n    }\r\n\r\n    console.log(\"Perfil photo captured.\");\r\n\r\n  }\r\n\r\n\r\n  upgradeMe = (event) => {\r\n\r\n  \tevent.preventDefault();\r\n\r\n  \tconsole.log('Approval ongoing...');\r\n\r\n  \tthis.waiters.status_trigerred = true;\r\n\r\n    const _this = this;\r\n\r\n    _this.contract.methods.approveMeAsArtist(\"0xCD109A076466EFf8e224a3a10619f54b7e4ce2f1\")\r\n    .send({from: _this.eth_account, gas: 200000}).then((res) => {\r\n\r\n  \t_this.state.status_approved_as_artist = true;\r\n\r\n    }).catch(_ => {})\r\n\r\n\t\tthis.waiters.status_trigerred = false;\r\n\r\n\t\tconsole.log('Approval setted.');\r\n\r\n  }\r\n\r\n\r\n  onSubmit = (event) => {\r\n\r\n  \tevent.preventDefault();\r\n\r\n  \tconsole.log('Submitting the form...');\r\n\r\n  \tif (this.waiters.status_trigerred || this.waiters.photo_trigerred) { return; }\r\n\r\n\r\n  \tconst currentDate = new Date();\r\n  \tthis.state.creation_date = \r\n      currentDate.getFullYear().toString()+\"-\"+\r\n      (currentDate.getMonth()+1).toString()+\"-\"+\r\n      currentDate.getDate();\r\n  \t\t\r\n  \tthis.state.my_bio = document.getElementById('textarea-mybio').value;\r\n\r\n  \tthis.state.my_name = document.getElementById('input-myname').value;\r\n\r\n  \tconst _this = this;\r\n\r\n  \tipfs.add( JSON.stringify(this.state) ).then( function(out) {\r\n\r\n  \t\tconsole.log('Perfil on ipfs: ', out['path']);\r\n\r\n  \t\t_this.state.person_hash = out['path'];\r\n\r\n  \t\tconsole.log('https://ipfs.infura.io/ipfs/'+out['path']);\r\n\r\n\r\n      _this.contract.methods.setPerson(out['path'], _this.state.status_approved_as_artist)\r\n      .send({from: _this.eth_account, gasPrice:2000000}).then((res) => {\r\n\r\n        console.log('Person setted with ipfs hash of', out['path']);\r\n\r\n      }).catch( () => {\r\n\r\n        console.log('Setting rejected.');\r\n\r\n      });\r\n\r\n\r\n  \t});\r\n\r\n\r\n  \tconsole.log('Submitted.');\r\n\r\n    // window.location.assign('/search'); // window redirect cancels metamask payment \\ put it in a then() after confirmation.\r\n\r\n\r\n  }\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex grid grid-cols-1 text-center\">\r\n              <div className=\"mr-auto ml-auto -mt-8 w-1/2\">\r\n                \r\n                <div className=' self-center ml-auto mr-auto w-1/2 h-1/2 min-h-96 min-w-96 max-w-96 max-h-96 border-4 border-black'> \r\n                <img src={_user} id='img-cover' className=\"h-full w-full Album_cover_display\" alt=\"album cover image\" />\r\n                </div>\r\n              \r\n                <p className='h-auto mt-4 text-4xl font-bold font-mono'> My Info </p>\r\n                \r\n                <form onSubmit={this.onSubmit}> \r\n                  \r\n                  <input type='text' id='input-creationdate' className='font-mono w-2/3 bg-gray-200 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent ' value=\" Creation Date: 2021-10-20\" disabled/>\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-currentstatus' className='font-mono w-2/3 bg-gray-200 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent ' value=\" Current Status: fan \" disabled/>\r\n                  <br/>\r\n\r\n                  <input type='text' id='input-myname' className='font-mono w-2/3 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" My Name \" />\r\n                  <br/>\r\n                  \r\n                  <textarea id='textarea-mybio' className='bg-gray-100 border-4 border-gray-300 rounded-sm mt-2 mb-2 w-2/3 h-40 font-mono text-xl bg-sroll'> My bio :) </textarea>\r\n\r\n\r\n                  <br/>\r\n                  <label for='input-perfilphoto' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Change Perfil Photo: </label><br/>\r\n                  <input type='file' id='input-perfilphoto' className='w-2/3 h-auto text-3xl' onChange={this.capturePerfilPhoto} />\r\n                  <br/>\r\n\r\n                  <br/>\r\n                  <label for='input-becomeartist' className=\"w-5/6 h-auto text-4xl font-bold font-mono\"> Become an Artist: </label><br/>\r\n                  <button id='input-becomeartist' className='w-2/3 mt-2 mb-2 text-4xl h-auto font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white' onClick={this.upgradeMe} > Upgrade from Fan to Artist </button>\r\n\r\n                  <br/>\r\n                  <input type='submit' className='w-2/3 mt-2 mb-2 text-4xl h-auto font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white' value=\"Save Changes\" />\r\n                  <br/>\r\n                  <br/>\r\n\r\n                </form>\r\n\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default Me;\r\n","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\Search.js",["69","70","71","72","73"],"import React, { Component } from 'react';\r\nimport './Search.css';\r\n\r\nimport Web3 from 'web3';\r\nimport Diskify from '../abis/Diskify.json';\r\n\r\nimport no_results from '../no_results.png';\r\n\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass Search extends Component {\r\n\r\n\tasync componentWillMount() {\r\n\r\n    await this.loadWeb3();\r\n\r\n    await this.loadBlockchainData();\r\n\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n\r\n    const web3 = window.web3;\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.eth_account = accounts[0];\r\n\r\n    console.log(accounts);\r\n\r\n    const networdId = await web3.eth.net.getId();\r\n    const networkData = Diskify.networks[networdId];\r\n\r\n    console.log(networkData, networdId)\r\n\r\n    if (networkData) {\r\n\r\n      const abi = Diskify.abi;\r\n      this.contract = new web3.eth.Contract(abi, networkData.address);\r\n\r\n\r\n    } else { window.alert(\"Contract not deployed.\"); return; }\r\n    \r\n    console.log(this.contract);\r\n\r\n  }\r\n\r\n\r\n\r\n  constructor (props) {\r\n\r\n  \tsuper(props);\r\n\r\n  \tthis.state = {};\r\n\r\n  \tthis.eth_account = '';\r\n  \tthis.contract = '';\r\n\r\n  }\r\n\r\n\r\n  async loadWeb3() {\r\n\r\n\t  if (window.ethereum) {\r\n\r\n\t    window.web3 = new Web3(window.ethereum);\r\n\t    await window.ethereum.enable();\r\n\r\n\t  } if (window.web3) {\r\n\r\n\t    window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n\t  } else {\r\n\r\n\t  \tconsole.log(\"User did not connect its metamask wallet.\");\r\n\r\n\t  }\r\n\r\n\t}\r\n\r\n\r\n\tlogging_noresult = (_query) => {\r\n\r\n\t\tif (_query.length > 0){\r\n\r\n\t\t\t//document.getElementById('div-noresults').innerHTML = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\t//document.getElementById('div-noresults').innerHTML = \"\"; //add div later;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfinder = (number, query) => {\r\n\r\n\t\tconst _this = this;\r\n\r\n    _this.contract.methods.getAlbum(number).call({from: _this.eth_account}).then((res) => {\r\n\r\n    \t\tvar aid = res['album_info_pointer_ipfs_hash'];\r\n\r\n    \t\tconsole.log('https://ipfs.infura.io/ipfs/'+aid);\r\n\r\n    \t\tfetch('https://ipfs.infura.io/ipfs/'+aid)\r\n    \t\t.then((res)=>res.text())\r\n    \t\t.then((res)=>{\r\n\r\n    \t\t\tconst content = JSON.parse(res.toLowerCase());\r\n\r\n    \t\t\tvar data_ = content['artist_name']+ \" \"+content['release_date']+ \" \"+\r\n    \t\t\t          content['album_name']+ \" \"+content['artist_name']+\" \"+content['genres']+\" \";\r\n\r\n    \t\t\tconst tracks = content['track_names'];\r\n    \t\t\t\r\n    \t\t\tfor (var _i = 0; _i < tracks.length; _i++){\r\n\r\n    \t\t\t\tdata_ += tracks[_i]+\" \";\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tconsole.log(data_, data_.search(query.toLowerCase()))\r\n\r\n    \t\t\tif (data_.search(query.toLowerCase())) {\r\n\r\n    \t\t\t\t\t_this.resultConstructor(number);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}).catch( _ => console.log(\"error\"));\r\n\r\n\r\n    }).catch(() => {\r\n\r\n    \tconsole.log('unfetchable');\r\n    \t\r\n    } );\r\n\r\n\t}\r\n\r\n\r\n\tresultConstructor = (number) => {\r\n\r\n\t\tconst _this = this;\r\n\r\n\t\tvar arr = [];\r\n\r\n\t\t_this.contract.methods.getAlbum(number).call({from: _this.eth_account}).then((res) => {\r\n\r\n    \t\tvar aid = res['album_info_pointer_ipfs_hash'];\r\n\r\n    \t\tfetch('https://ipfs.infura.io/ipfs/'+aid)\r\n    \t\t.then((res)=>res.text())\r\n    \t\t.then((res)=>{\r\n\r\n    \t\t\tconst content = JSON.parse(res);\r\n\r\n    \t\t\tarr.push(content['album_cover']);\r\n    \t\t\tarr.push(content['album_name']);\r\n    \t\t\tarr.push(content['genres']);\r\n    \t\t\tarr.push(content['artist_name']);\r\n    \t\t\t\r\n    \t\t\t_this.appender(arr, aid);\r\n\r\n    \t\t}).catch( _ => console.log(\"error2\"));\r\n\r\n\r\n    }).catch(() => {\r\n\r\n    } );\r\n\r\n\t\t\r\n\r\n\t}\r\n\r\n\r\n\tappender = (arr, aid) => {\r\n\r\n\r\n\t\tconst correct_path = 'https://ipfs.infura.io/ipfs/'+arr[0].split(\"/\")[4];\r\n\r\n\t\tif (arr[1].length == 0) { arr[1] = 'This album has no name!'; }\r\n\t\tif (arr[2].length == 0) { arr[2] = 'This album has no genres!'; }\r\n\t\tif (arr[3].length == 0) { arr[3] = 'This album has no artist name!'; }\r\n\r\n\t\tconsole.log(arr, correct_path);\r\n\r\n\t\tvar _img = document.createElement(\"IMG\"); \r\n\t\t_img.className = 'h-auto w-auto imImg';\r\n\t\t_img.src = correct_path;\r\n\r\n\t\tvar _div1 = document.createElement(\"DIV\");\r\n\t\t_div1.className = 'w-1/2 h-1/2 min-w-80 min-h-80 h-auto imDiv';\r\n\r\n\t\t_div1.appendChild(_img);\r\n\r\n\r\n\t\tvar _p1 = document.createElement(\"P\");\r\n\t\t_p1.innerHTML = arr[1]; _p1.className = \"imP\";\r\n\t\tvar _p2 = document.createElement(\"P\");\r\n\t\t_p2.innerHTML = arr[2]; _p2.className = \"imP\";\r\n\t\tvar _p3 = document.createElement(\"P\");\r\n\t\t_p3.innerHTML = arr[3]; _p3.className = \"imP\";\r\n\r\n\r\n\t\tvar _div2 = document.createElement(\"DIV\");\r\n\t\t_div2.className = 'grid grid-rows-3 grid-cols-1 text-3xl font-mono imDiv';\r\n\r\n\t\t_div2.appendChild(_p1);\r\n\t\t_div2.appendChild(_p2);\r\n\t\t_div2.appendChild(_p3);\r\n\r\n\r\n\t\tvar _maindiv = document.createElement(\"DIV\");\r\n\t\t_maindiv.className = \"grid grid-rows-1 grid-cols-2 w-full bg-gray-100 border-gray-300  h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black\";\r\n\r\n\t\t_maindiv.onclick = this.handleView;\r\n\r\n\t\t_maindiv.appendChild(_div1);\r\n\t\t_maindiv.appendChild(_div2);\r\n\r\n\t\t_maindiv.id = aid;\r\n\r\n\t\tdocument.getElementById(\"div-appendresults\").appendChild(_maindiv);\r\n\r\n\r\n\t}\r\n\r\n\tsearching = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst _query = document.getElementById('input-search').value;\r\n\r\n\t\tdocument.getElementById('div-appendresults').innerHTML = \"\";\r\n\r\n\t\tthis.logging_noresult(_query);\r\n\r\n\t\tconst _this = this;\r\n\r\n\r\n\t\tvar limit = 0;\r\n\t\t_this.contract.methods.album_id_counter().call({from: _this.eth_account})\r\n\t\t.then( (r) => {\r\n\r\n\t\t \tlimit = parseInt(r); \r\n\r\n\t\t\tfor( var i = 0; i < limit+1; i++ ){\r\n\r\n\t\t\t\t_this.finder(i, _query);\r\n\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\t.catch( _ => console.log(\"error\") );\r\n\r\n\r\n\t}\r\n\r\n\thandleView = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\r\n\t\tvar hash = '';\r\n\r\n\t\tif (event.target.className.search(\"imP\") > -1){\r\n\r\n\t\t\thash = event.target.parentElement.parentElement.id;\t\t\t\r\n\r\n\t\t} else if (event.target.className.search(\"imImg\") > -1){\r\n\r\n\t\t\thash = event.target.parentElement.parentElement.id;\r\n\r\n\t\t} else if (event.target.className.search(\"imDiv\") > -1){\r\n\r\n\t\t\thash = event.target.parentElement.id;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thash = event.target.id;\r\n\r\n\t\t}\r\n\r\n\t\twindow.location.assign('/view/'+hash);\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row \">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex grid grid-cols-1 text-center \">\r\n              <div id='div-search' className=\"mr-auto ml-auto -mt-8 w-5/6 \">\r\n              \r\n                <input type='text' id='input-search' onChange={this.searching} className='font-mono w-5/6 bg-gray-100 border-gray-300 h-auto rounded-lg text-3xl p-4 mb-2 hover:bg-gray-100 border-4 border-transparent hover:border-black' placeholder=\" Search... \" />\r\n                <br/>\r\n\r\n                <div id='div-appendresults' className=''>\r\n\r\n                </div> \r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default Search;\r\n\r\n\r\n","C:\\Users\\Gustavo\\Desktop\\proj\\Diskify\\src\\components\\View.js",["74","75","76"],"import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './View.css'\r\nimport Diskify from '../abis/Diskify.json';\r\nimport _cover_placeholder from '../cover_placeholder.png';\r\n\r\n\r\nconst {create} = require('ipfs-http-client');\r\n\r\nconst ipfs = create({host: 'ipfs.infura.io', port:5001, protocol:'https'});\r\n\r\n\r\nclass View extends Component {\r\n\r\n\r\n\tasync componentWillMount() {\r\n\r\n    await this.loadWeb3();\r\n\r\n    await this.loadBlockchainData();\r\n\r\n  }\r\n\r\n  async loadWeb3() {\r\n\r\n\t  if (window.ethereum) {\r\n\r\n\t    window.web3 = new Web3(window.ethereum);\r\n\t    await window.ethereum.enable();\r\n\r\n\t  } if (window.web3) {\r\n\r\n\t    window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n\t  } else {\r\n\r\n\t  \tconsole.log(\"User did not connect its metamask wallet.\");\r\n\r\n\t  }\r\n\r\n\t}\r\n\r\n\tasync loadBlockchainData() {\r\n\r\n    const web3 = window.web3;\r\n\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    this.eth_account = accounts[0];\r\n\r\n    console.log(accounts);\r\n\r\n    const networdId = await web3.eth.net.getId();\r\n    const networkData = Diskify.networks[networdId];\r\n\r\n    console.log(networkData, networdId)\r\n\r\n    if (networkData) {\r\n\r\n      const abi = Diskify.abi;\r\n      this.contract = new web3.eth.Contract(abi, networkData.address);\r\n\r\n      this.loadValuesInPage();\r\n\r\n    } else { window.alert(\"Contract not deployed.\"); return; }\r\n    \r\n    console.log(this.contract);\r\n\r\n  }\r\n\r\n  async loadValuesInPage() {\r\n  \t\r\n  \tconsole.log('https://ipfs.infura.io/ipfs/'+window.location.href.split('/')[4])\r\n\r\n  \tconst _this = this;\r\n  \tfetch('https://ipfs.infura.io/ipfs/'+window.location.href.split('/')[4])\r\n  \t.then( (res) => res.text())\r\n  \t.then( (res) => {\r\n\r\n  \t\tconst __album = JSON.parse(res);\r\n\r\n  \t\tconsole.log(__album);\r\n\r\n  \t\tdocument.getElementById('p-from').innerHTML = 'Artist address: '+__album.artist_address;\r\n  \t\t\r\n  \t\tdocument.getElementById('p-artistname').innerHTML = 'Artist name: '+__album.artist_name;\r\n  \t\tdocument.getElementById('p-releasedate').innerHTML = 'Release date: '+__album.release_date;\r\n\r\n  \t\tdocument.getElementById('p-albumname').innerHTML = 'Album name: '+__album.album_name;\r\n  \t\tdocument.getElementById('p-genres').innerHTML = 'Genres: '+__album.genres;\r\n\r\n  \t\tdocument.getElementById('textarea-displaytracks').value = '\\r\\n';\r\n\r\n  \t\tfor(var i = 0; i < __album.track_names.length; i++){\r\n\r\n  \t\t\tdocument.getElementById('textarea-displaytracks').value += i.toString() + ') ' + __album.track_names[i] + '\\r\\n';\r\n\r\n  \t\t} \r\n\r\n  \t\tvar _img = document.getElementById('img-cover');\r\n\r\n\t    _img.onload = () => { URL.revokeObjectURL(_img.src); };\r\n\r\n\t    _img.src = \"https://ipfs.infura.io/ipfs/\"+__album.album_cover.split('/')[4];\r\n\r\n  \t\tconsole.log('track_hashes: ', __album.track_hashes);\r\n\r\n\r\n  \t\t_this.contract.methods.owner().call()\r\n  \t\t.then( (res) => {\r\n\r\n  \t\t\t_this.owner_address = res;\r\n\r\n  \t\t})\r\n  \t\t.catch( () => {\r\n\r\n  \t\t\tconsole.log('owner() related problem');\r\n\r\n  \t\t});\t\r\n\r\n  \t\t_this._address_of_artist = __album.artist_address;\r\n\r\n\r\n  \t\tvar allipfs = [];\r\n\r\n\r\n  \t\t_this.contract.methods.album_id_counter().call()\r\n  \t\t.then( (res) => {\r\n\r\n  \t\t\tconst upper_limit = parseInt(res);\r\n\r\n  \t\t\tvar counter = 0;\r\n  \t\t\tfor(var _i = 0; _i < upper_limit; _i++){\r\n\r\n  \t\t\t\t_this.contract.methods.getAlbum(_i).call()\r\n  \t\t\t\t.then( (res) => {\r\n\r\n  \t\t\t\t\tallipfs.push(res['album_info_pointer_ipfs_hash']);\r\n\r\n  \t\t\t\t\tif (window.location.href.split('/')[4] === res['album_info_pointer_ipfs_hash']){\r\n  \t\t\t\t\t\t\r\n  \t\t\t\t\t\t_this.album_aid = allipfs.indexOf(res['album_info_pointer_ipfs_hash']);\r\n\r\n  \t\t\t\t\t\tdocument.getElementById('p-blocked').innerHTML = 'Content is blocked: '+res['block'];\r\n  \t\t\t\t\t\tdocument.getElementById('p-diskifyroyalties').innerHTML = 'Diskify royalties: ' + \r\n  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(parseInt(res['diskify_royalties']) / 10).toString() +\"%\";\r\n  \t\t\t\t\t\t\r\n  \t\t\t\t\t\tdocument.getElementById('p-artistroyalties').innerHTML = 'Artist royalties: '+\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(parseInt(res['artist_royalties']) / 10).toString() +\"%\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t \r\n  \t\t\t\t\t\t_this.contract.methods.balanceOf(__album.artist_address, counter).call()\r\n  \t\t\t\t\t\t.then( (res) => {\r\n\r\n  \t\t\t\t\t\t\tdocument.getElementById('p-ncopies').innerHTML = 'Number of copies: ' + res;\r\n\r\n  \t\t\t\t\t\t})\r\n  \t\t\t\t\t\t.catch( () => {\r\n\r\n  \t\t\t\t\t\t\tconsole.log('balanceOf() related problem');\r\n\r\n  \t\t\t\t\t\t});\r\n\r\n  \t\t\t\t\t\t_this.aid_acquired = true;\r\n\r\n  \t\t\t\t\t}\r\n  \t\t\t\t\t\r\n  \t\t\t\t\tcounter += 1;\r\n\r\n  \t\t\t\t}).catch( () => {\r\n\r\n  \t\t\t\t\tconsole.log('getAlbum() related problem');\r\n\r\n  \t\t\t\t});\r\n\r\n  \t\t\t}\r\n\r\n  \t\t})\r\n  \t\t.catch( () => {\r\n\r\n  \t\t\tconsole.log(\"Problem acquiring methods.\")\r\n\r\n  \t\t})\r\n\r\n  \t})\r\n  \t.catch( () => {\r\n\r\n  \t\tconsole.log('invalid url');\r\n\r\n  \t});\r\n\r\n\r\n  }\r\n\r\n\r\n\tconstructor (props) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\tthis.hash = window.location.href.split('/')[4];\r\n\r\n\t\tthis.eth_account = '';\r\n\r\n\t\tthis.contract\t= '';\r\n\r\n\t\tthis.album_aid = -1;\r\n\r\n\t\tthis.aid_acquired = false;\r\n\r\n\t\tthis._address_of_artist = '';\r\n\r\n\t\tthis.owner_address = '';\r\n\r\n\t}\r\n\r\n\r\n\tpurchaseNFT = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\twhile( this.aid_acquired === false ){ ; }\r\n\t\t\r\n\t\tconst _this = this;\r\n\r\n\t\tconsole.log(_this.album_aid);\r\n\r\n\t\t_this.contract.methods.balanceOf(_this.eth_account, _this.album_aid).call()\r\n\t\t.then( (res) => {  \r\n\r\n\t\t\t\tconsole.log('This account has ',res,' of nft-id (',_this.album_aid,') in its balance'); \r\n\r\n\t\t})\r\n\t\t.catch( () => {\r\n\r\n\t\t\tconsole.log('balanceOf() related problem.');\r\n\r\n\t\t})\r\n\r\n\t\tconsole.log(_this._address_of_artist);\r\n\r\n\t\tconsole.log(\"aid\", _this.album_aid);\r\n\r\n\t\t_this.contract.methods.nft_price(_this.album_aid, _this._address_of_artist).call()\r\n\t\t.then( (res) => {\r\n\r\n\t\t\tconst msgvalue = parseInt(res) + 100000;\r\n\r\n\t\t\t_this.contract.methods.tradeNFT(_this.eth_account, _this._address_of_artist, \"0xCD109A076466EFf8e224a3a10619f54b7e4ce2f1\", _this.album_aid)\r\n\t\t\t.send({from: _this.eth_account, value: msgvalue})\r\n\t\t\t.then( (res) => {\r\n\r\n\t\t\t\tconsole.log('hey', res);\r\n\r\n\t\t\t})\r\n\t\t\t.catch( () => {\r\n\r\n\t\t\t\tconsole.log('tradeNFT() related problem');\r\n\r\n\t\t\t});\r\n\r\n\t\t})\r\n\t\t.catch( () => {\r\n\r\n\t\t\tconsole.log('nft_price() related problem');\r\n\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div>\r\n\t\t\t<div className=\"container-fluid mt-5\">\r\n      <div className=\"row\">\r\n      \r\n        <main role=\"main\" className=\"col-lg-12 grid grid-cols-1 grid-rows-2 grid-flow-row text-center\">\r\n          \r\n          <div className=\"mr-auto ml-auto -mt-8 w-3/4 grid grid-cols-2 grid-rows-1\">\r\n            \r\n            <div className='self-center ml-auto mr-auto min-h-96 min-w-96 max-w-full max-h-full border-4 border-black'> \r\n            \r\n            \t<img src={_cover_placeholder} id='img-cover' className=\"h-full w-full Album_cover_display\" alt=\"album cover image\" />\r\n            \r\n            </div>\r\n\r\n            <div className='font-bold font-mono text-xl h-auto mt-20'> \r\n\r\n\t            <p id='p-from'> </p>\t\r\n\t            <p id='p-artistname'> </p>\r\n\t            <p id='p-releasedate'> </p>\r\n\t            <p id='p-albumname'> </p>\r\n\t            <p id='p-genres'> </p>\r\n\r\n              <textarea id='textarea-displaytracks' className='bg-gray-200 border-4 border-gray-300 rounded-sm mt-2 w-5/6 h-60 font-mono text-xl bg-sroll' disabled> No tracks yet :( </textarea>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"mr-auto ml-auto -mt-8 w-3/4 grid grid-cols-1\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\r\n\t          \t<div className='font-bold font-mono text-xl h-auto mt-20'>\r\n\r\n\t\t            <p id='p-blocked'> </p>\t\r\n\t\t            <p id='p-diskifyroyalties'> </p>\r\n\t\t            <p id='p-artistroyalties'> </p>\r\n\t\t\t\t\t\t\t\t<p id='p-ncopies'> </p>\r\n\t\t            \r\n\t            </div>\r\n\r\n          \t  <button onClick={this.purchaseNFT} className='text-center w-1/3 mt-2 mb-2 text-4xl h-1/6 font-bold font-mono text-gray-100 hover:text-black bg-black border-4 border-black hover:bg-white'>\r\n          \t  Purchase\r\n          \t  </button>\r\n            \r\n            </div>\r\n\r\n          </div>\r\n\r\n        </main>         \r\n\r\n      </div>\r\n    \t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default View;\r\n\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":19,"column":167,"nodeType":"83","endLine":19,"endColumn":170},{"ruleId":"81","severity":1,"message":"82","line":20,"column":169,"nodeType":"83","endLine":20,"endColumn":172},{"ruleId":"81","severity":1,"message":"82","line":22,"column":171,"nodeType":"83","endLine":22,"endColumn":174},{"ruleId":"81","severity":1,"message":"82","line":23,"column":173,"nodeType":"83","endLine":23,"endColumn":176},{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":12,"column":7,"nodeType":"86","messageId":"87","endLine":12,"endColumn":11},{"ruleId":"89","severity":1,"message":"90","line":191,"column":8,"nodeType":"83","endLine":191,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":229,"column":8,"nodeType":"83","endLine":229,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":265,"column":9,"nodeType":"83","endLine":265,"endColumn":60},{"ruleId":"91","severity":1,"message":"92","line":214,"column":8,"nodeType":"93","messageId":"94","endLine":214,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":215,"column":14,"nodeType":"93","messageId":"94","endLine":215,"endColumn":24},{"ruleId":"91","severity":1,"message":"92","line":218,"column":5,"nodeType":"93","messageId":"94","endLine":218,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":220,"column":5,"nodeType":"93","messageId":"94","endLine":220,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":224,"column":5,"nodeType":"93","messageId":"94","endLine":224,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":229,"column":5,"nodeType":"93","messageId":"94","endLine":229,"endColumn":15},{"ruleId":"84","severity":1,"message":"95","line":258,"column":9,"nodeType":"86","messageId":"87","endLine":258,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":305,"column":17,"nodeType":"83","endLine":305,"endColumn":134},{"ruleId":"98","severity":1,"message":"99","line":73,"column":32,"nodeType":"100","messageId":"101","endLine":73,"endColumn":34},{"ruleId":"91","severity":1,"message":"92","line":239,"column":4,"nodeType":"93","messageId":"94","endLine":239,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":244,"column":4,"nodeType":"93","messageId":"94","endLine":244,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":246,"column":4,"nodeType":"93","messageId":"94","endLine":246,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":293,"column":17,"nodeType":"83","endLine":293,"endColumn":121},{"ruleId":"84","severity":1,"message":"102","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":12,"column":7,"nodeType":"86","messageId":"87","endLine":12,"endColumn":11},{"ruleId":"98","severity":1,"message":"99","line":188,"column":21,"nodeType":"100","messageId":"101","endLine":188,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":189,"column":21,"nodeType":"100","messageId":"101","endLine":189,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":190,"column":21,"nodeType":"100","messageId":"101","endLine":190,"endColumn":23},{"ruleId":"84","severity":1,"message":"88","line":10,"column":7,"nodeType":"86","messageId":"87","endLine":10,"endColumn":11},{"ruleId":"103","severity":1,"message":"104","line":136,"column":14,"nodeType":"105","messageId":"106","endLine":170,"endColumn":8},{"ruleId":"96","severity":1,"message":"97","line":286,"column":14,"nodeType":"83","endLine":286,"endColumn":131},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'logo_' is defined but never used.","Identifier","unusedVar","'ipfs' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'_hash' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'no_results' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'counter', 'counter'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]